#!/usr/bin/env php
<?php

/*
 * This file is part of the `src-run/vermicious-symfony-deploy-library` project.
 *
 * (c) Rob Frawley 2nd <rmf@src.run>
 * (c) Anton Medvedev <anton@medv.io>
 *
 * For the full copyright and license information, please view the LICENSE.md
 * file that was distributed with this source code.
 */

/**
 * @param string $file
 */
function includeDeployFile($file)
{
    $dirOpt = [__DIR__ . '/../../../../', __DIR__ . '/../', __DIR__ . '/./'];
    $loaded = false;

    foreach ($dirOpt as $path) {
        if (!file_exists($filePath = $path . $file)) {
            continue;
        }

        require_once $filePath;
        $loaded = true;

        break;
    }

    if (!$loaded) {
       fwrite(STDERR, sprintf('Could not locate required include "%s/(../../../..|..|.)/%s"', __DIR__, $file));
        exit(255);
    }
}

// constant to set that this is a deploy script and this is the deploy bin
define('DEPLOYER', true);
define('DEPLOYER_BIN', __FILE__);

// include autoload, our functions, and deployer functions
includeDeployFile('/vendor/autoload.php');
includeDeployFile('/lib/stub/functions.php');
includeDeployFile('/vendor/deployer/deployer/src/functions.php');

die('OKAY');

// Recipe include path
set_include_path(__DIR__ . '/../' . PATH_SEPARATOR . get_include_path());

// Include function declarations
require_once 'src/functions.php';

// Init Deployer
$console = new \Deployer\Console\Application('Deployer', 'master');
$input = new \Symfony\Component\Console\Input\ArgvInput();
$output = new \Symfony\Component\Console\Output\ConsoleOutput();
$deployer = new \Deployer\Deployer($console, $input, $output);

// Require config.php script
$options = getopt('f::', ['file::']);
$userSpecifiedFile = null;

if (isset($options['f'])) {
    $userSpecifiedFile = $options['f'];
} elseif (isset($options['file'])) {
    $userSpecifiedFile = $options['file'];
}

if (empty($userSpecifiedFile)) {
    $deployFile = getcwd() . '/config.php';
} else {
    $deployFile = ($userSpecifiedFile[0] === '/' ? '' : getcwd() . '/') . $userSpecifiedFile;
}

if (is_file($deployFile) && is_readable($deployFile)) {
    require $deployFile;
}

// Run Deployer
$deployer->run();
